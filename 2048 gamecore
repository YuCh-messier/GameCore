 class go2048    
    {
        int[,] gamecore = new int[4, 4];
        List<int> hang = new List<int>();
        List<int> lie = new List<int>();
       public void GetBlank()
        {
            for(int h=0;h<4;h++)
            {
                for(int l=0;l<4;l++)
                {
                    if(gamecore[h,l]==0)
                    {
                        hang.Add(h);
                        lie.Add(l);
                    }
                }
            }
        }
        public void SetNum()
        {
            Random set = new Random();
            int num = set.Next(0, 11);
            int posi = set.Next(0, hang.Count);
            gamecore[hang[posi], lie[posi]] = num == 5 ? 4 : 2;
            hang.Clear();
            lie.Clear();
        }
        public void Print()
        {
            for(int h=0;h<4;h++)
            {
                for (int l = 0; l < 4;l++)
                {
                    Console.Write(gamecore[h, l] + "   ");
                }
                Console.WriteLine();
            }
        }
        public void RemoveZero(int[] a)
        {
            int sor = 0;
            int[] mid = new int[4];
            for(int i=0;i<4;i++)
            {
                if(a[i]!=0)
                { mid[sor] = a[i];sor++; }
            }
            mid.CopyTo(a, 0);
        }
        public void CombineSame(int[] a)
        {
            for (int i =0;i<3;i++)
            {
                if(a[i]==a[i+1] && a[i]!=0)
                {
                    a[i] *= 2;a[i + 1] = 0;
                }
            }
        }
        public void OpeSP(string play)
        {
            for(int h=0;h<4;h++)
            {
                int[] mid = new int[4];
                for(int l=0;l<4;l++)
                {
                    mid[l] = gamecore[h, l];
                }
                RemoveZero(mid);
                CombineSame(mid);
                RemoveZero(mid);
                int judge = SXZY(play);
                if (judge == 2)
                    Left(mid, h);
                else if (judge == 4)
                    Right(mid, h);
            }
        }
        public void Right(int[] a,int h)
        {
            for(int i=0;i<4;i++)
            {
                gamecore[h, i] = a[i];
            }
        }
        public void Left(int[] a, int h)
        {
            for (int i = 0; i < 4; i++)
            {
                gamecore[h, 3-i] = a[i];
            }
        }
        public void OpeCZ(string play)
        {
            for (int l = 0; l < 4; l++)
            {
                int[] mid = new int[4];
                for (int h = 0; h < 4; h++)
                {
                    mid[h] = gamecore[h, l];
                }
                RemoveZero(mid);
                CombineSame(mid);
                RemoveZero(mid);
                int judge = SXZY(play);
                if (judge == 1)
                    Up(mid, l);
                else if (judge == 3)
                    Down(mid, l);
            }
        }
        public void Up(int[] a, int l)
        {
            for (int i = 0; i < 4; i++)
            {
                gamecore[i, l] = a[i];
            }
        }
        public void Down(int[] a, int l)
        {
            for (int i = 0; i < 4; i++)
            {
                gamecore[3-i, l] = a[i];
            }
        }
        public int SXZY(string play)
        {
            if (play == "w")
                return 1;
            else if (play == "a")
                return 4;
            else if (play == "s")
                return 3;
            else
                return 2;
        }
        public void PlayCore()
        {
            GetBlank();
            SetNum();
            Print();
            for (; ; )
            {
                string judge = Console.ReadLine();
                if (judge == "w" || judge == "s")
                    OpeCZ(judge);
                else
                    OpeSP(judge);
                GetBlank();
                SetNum();
                Console.Clear();
                Print();
            }
        }
    }
